<?php
/**
 * Created by PhpStorm.
 * User: me
 * Date: 23.10.2018
 * Time: 16:06
 */

namespace components\Controller\street;

use components\Component\Config;
use components\models\Castles;
use components\models\User;

class ClanStreetController extends BaseStreetController
{
	private $_exclude_actions = ['enter', 'location', 'exit'];

	public function beforeAction($action)
	{
		$r = parent::beforeAction($action); // TODO: Change the autogenerated stub
		if($this->user->battle != 0) {
			$this->redirect('/fbattle.php');
		}

		if(!in_array($action, $this->_exclude_actions) && !in_array($this->user->room, [400])) {
			$this->redirect($this->app->request->getReferer());
		}

		return $r;
	}

	public function locationAction()
	{
		switch ($this->user->room) {
			case 400: //улица
				$this->redirect($this->app->urlFor('street.clan', ['action' => 'index']));
				break;
			case 401: //заявки
				$this->redirect($this->app->urlFor('clan.tournament', ['action' => 'index']));
				break;
			case 402: //сам турнир
				$this->redirect($this->app->urlFor('clan.tournament', ['action' => 'tournament']));
				break;
		}

		$this->redirect('/castles.php');
	}

	public function indexAction()
	{
		$this->app->clientScript
			->registerCssFile('/assets/css/bootstrap.min.css')
			->registerCssFile('/newstyle_loc.css')
			->registerCssFile('/i/style.css')
			->registerJsFile('/assets/js/sweetalert.min.js');

		$castles = Castles::where('id', '!=', 155)
			->orderBy('nlevel', 'asc')
			->groupBy('nlevel')
			->get()->keyBy('nlevel')->toArray();

		$this->render('index', [
			'castles' => array_keys($castles)
		]);
	}

	public function enterAction()
	{
		$moveTime = $this->app->session->get('gotoloc', 0);
		if(time() - $moveTime < $this->movetime || $this->user->room != 70000 || Config::isTester($this->user) == false) {
			$this->redirect($this->app->request->getReferer());
		}
		$this->app->session->set('gotoloc', time());

		$this->user->room = 400;
		$this->user->save();

		$this->redirect($this->app->urlFor('street.clan', ['action' => 'index']));
	}

	public function castleAction()
	{
		$level = isset($_GET['level']) ? (int)$_GET['level'] : 0;
		$isTur = isset($_GET['tur']);
		$isExit = isset($_GET['exit']);

		$this->user->room = 70000;
		$this->user->save();

		if($isTur) {
			$this->redirect('/castles.php?tur=');
		}
		if($isExit) {
			$this->redirect('/castles.php?exit=');
		}

		$this->redirect('/castles.php?level='.$level);
	}

	public function tournamentAction()
	{
		$this->user->room = 401;
		$this->user->save();

		$this->redirect($this->app->urlFor('clan.tournament', ['action' => 'index']));
	}
}